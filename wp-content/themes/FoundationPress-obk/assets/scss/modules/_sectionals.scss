/*******************************************************
******************************************************
*** side nav 2******************************************
*****************************************************/
.side-nav-2.off-canvas.position-left {
  height: 100%;
background: #222;
}
.side-nav-2{
  .top-bar, .top-bar ul{
    background: transparent;
  }
  .animatedTitle1{
    padding: 1em;
        padding-top: 2em;
  }
}

/*******************************************************
***orange box logo animation and styling
*****************************************************/
@font-face {
    font-family: Orphan;
    src: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/4273/orphan_2.woff') format('woff');
    font-weight: normal;
    font-weight: 100;
    font-style: normal;
}
@keyframes scroller {
    80% { text-indent: 5%; }
    100% { text-indent: 5%; }
}

@keyframes fader {
  to { opacity: 0; }
}
* { box-sizing: border-box; }


.animatedTitle1 h6 {
  width: 95%;
  max-width: 300px;
  color:#fff;
  overflow: hidden;
  text-transform: uppercase;
  font-family: Orphan, Futura Light, Futura, sans-serif;
  font-size: 1.5em;
  /* so that the text scales to browser window */
  min-height: 100%;
  /* just in case someone forgets to turn on CAPS */
}
.animatedTitle1 h6 span {
  display: inline-block;
  width: 50%;
  overflow: hidden;
  line-height: 2;
  animation: scroller 4s 1.5s 1 forwards;
/* initiates the "scroller" animation twice, each time for four seconds, with a 1 second pause beforehand. The "fader" animation takes place just once, over 1 second, with a five second pause beforehand */
}
.animatedTitle1 h6 span:first-child {
  text-indent: 100%;
  /* disappers text in the first (overflow: hidden) span by pushing it all the way to the right. Curiously, Webkit works with a value of 50%, but Firefox needs 100%; */
  border-right: .1em solid #fff;
}
.animatedTitle1 h6 span:last-child {
  text-indent: -100%;
  /* the opposite indent value for text in the right <span> element */
  border-left: .2em solid #fff;
}
.animatedTitle1 h6 span.closer:first-child {
  width: 20%;
/* shifted due to character length in the second part of the animation: this could also be automated by JavaScript counting the number of chars in each span and dividing the space appropriately */
}
.animatedTitle1 h6 span.closer:last-child { width: 80%;  }

/*********************************************************
*** section for callouts on front page********************
***********************************************************/

/*******************************************************
** styling for the call outs**
******************************************************/
.callOutSection
{

}
.callOutSection .callOutContainer{
	position: relative;
	padding: 1em;
	-webkit-transition: all 0.6s ease-out;
    -moz-transition: all 0.6s ease-out;
    -o-transition: all 0.6s ease-out;
    transition: all 0.6s ease-out;
}
.callOutSection .callOutContainer:hover .callOutImgContainer{
	opacity: .5;
}
.callOutSection .callOutContainer:hover .callOutText h3{
	font-size: 2em;
}
.callOutSection .callOutContainer .callOutContent{
position: relative;
}
.callOutSection .callOutContainer .callOutImgContainer{
	-webkit-transition: all 0.6s ease-out;
		-moz-transition: all 0.6s ease-out;
		-o-transition: all 0.6s ease-out;
		transition: all 0.6s ease-out;
}
.callOutSection .callOutContainer .callOutImgContainer:after{
	content: "";
	position: absolute;
	z-index: 2;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	background: rgba(0,0,0,.2);
	opacity: 1;
	transition: all 0.6s ease-out;
}
.callOutSection .callOutContainer .callOutImgContainer img{

}
.callOutSection .callOutContainer .callOutText{
	position: absolute;
	text-align: center;
	top: 0;
	margin: auto;
	bottom: 0;
	height: 0px;
	right: 0;
	left: 0;
	width: 100%;
	display: inline-block;
	padding-bottom: 2em;
}
.callOutSection .callOutContainer .callOutText h3{
	border-left: 5px solid red;
	padding-left: .3em;
	display: inline-block;
	-webkit-transition: all 0.6s ease-out;
    -moz-transition: all 0.6s ease-out;
    -o-transition: all 0.6s ease-out;
    transition: all 0.6s ease-out;
}
/*********************************************************
*** section for cool navigation********************
***********************************************************/
// variables
$accordion-bg: #222;
$accordion-sub-bg: #222;
$accordion-separator: #222;

// background for main accordion items
.is-accordion-submenu-parent a {
  background: $accordion-bg;
}

// background for sub accordion items
.is-accordion-submenu a {
  background: $accordion-sub-bg;
}

// style for folder icon on subitem anchors without a submenu
[data-accordion-menu] .is-accordion-submenu-parent[aria-expanded="true"] a.subitem::before {
  content: "\f016";
  font-family: FontAwesome;
  margin-right: 1rem;
}

// changes folder icon to open then accordion is open
[data-accordion-menu] .is-accordion-submenu-parent[aria-expanded="true"] a {
  &::before {
    content: "\f07c";
    font-family: FontAwesome;
    margin-right: 1rem;
  }
}

// changes folder icon to closed then accordion is closed
[data-accordion-menu] .is-accordion-submenu-parent[aria-expanded="false"] a {
  &::before {
    content: "\f07b";
    font-family: FontAwesome;
    margin-right: 1rem;
  }
}

// creates classes for nested elements, sub-item-*
@for $i from 1 through 6 {
  .sublevel-#{$i} {
    text-indent: 0rem + $i;
  }
}

[data-accordion-menu] {
  a {
    color: #fff;
    // sets accodion item separator color
    box-shadow: inset 0 -1px $accordion-separator;

    &::after {
      // sets accodion arrow color and direction
      border-color: #fff transparent transparent;
    }
  }
}

// padding for each list item
.menu > li:not(.menu-text) > a {
  padding: 1.2rem 1rem;
}
/*******************************************************
** styling for the cool navigation**
******************************************************/
